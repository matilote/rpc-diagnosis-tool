name: BLS test

on:
  push:
    branches:
    - master

jobs:
  neth-tests:
    name: bls
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
    - name: Cloning required repositories
      run: |
        git clone git://github.com/NethermindEth/bls.git
        git clone git://github.com/herumi/mcl.git
    #- name: Installing GMP for ubuntu
    #  if: matrix.os == 'ubuntu-latest'
    #  run: |
    #    sudo apt install libgmp-dev
    #- name: Installing GMP for osx
    #  if: matrix.os == 'macOS-latest'
    #  run: |
    #    brew install gmp
    - name: Cloning lib for Windows
      if: matrix.os == 'windows-latest'
      run: |
        git clone git://github.com/herumi/cybozulib_ext.git
    - name: Building BLS for Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install visualcpp-build-tools --params "'/IncludeOptional'"
        cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\" && call vcvars64.bat
        #cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\" && call vcvarsall.bat x64
        cd D:\a\rpc-diagnosis-tool\rpc-diagnosis-tool\mcl && call mklib.bat dll
      #  D:\a\rpc-diagnosis-tool\rpc-diagnosis-tool\bls\mk.bat -d test\bls_c384_test.cpp
      #  D:\a\rpc-diagnosis-tool\rpc-diagnosis-tool\bls\bin\bls_c384_test.exe
      shell: cmd
    #- name: Building BLS for Linux
    #  if: matrix.os == 'ubuntu-latest'
    #  run: |
    #    cd bls/
    #   make test
    #- name: Building BLS for OSX
    #  if: matrix.os == 'macOS-latest'
    #  run: |
    #    cd bls/
    #    make all


