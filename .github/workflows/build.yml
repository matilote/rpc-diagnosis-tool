name: GMP Build

on: push

jobs:
  gmp-build:
    name: Building GMP lib
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
    - name: Cloning GMP repository
      run: |
        git clone https://github.com/NethermindEth/secp256k1
    - name: Building GMP for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y mercurial
        hg clone https://gmplib.org/repo/gmp-6.2/ gmp
        sudo apt-get install autoconf libtool
        cd gmp/
        ./.bootstrap
        ./configure --host=x86_64-linux-gnu --disable-static --enable-shared
        make -j8
        strip .libs/libgmp.so
    - uses: actions/upload-artifact@v1
      name: Uploading Linux artifact
      if: matrix.os == 'ubuntu-latest'
      with:
        name: linux_artifact_gmp
        path: gmp/.libs/libgmp.so
    - name: Building gmp for OSX
      if: matrix.os == 'macOS-latest'
      run: |
        brew install mercurial
        brew install automake
        brew install libtool
        hg clone https://gmplib.org/repo/gmp-6.2/ gmp
        cd gmp/
        ./.bootstrap
        ./configure --host=none-apple-darwin --disable-static --enable-shared
        make -j8
    - uses: actions/upload-artifact@v1
      name: Uploading Darwin artifact
      if: matrix.os == 'macOS-latest'
      with:
        name: darwin_artifact_gmp
        path: gmp/.libs/libgmp.dylib
    - uses: numworks/setup-msys2@v1
      with:
        update: true
      if: matrix.os == 'windows-latest'
      name: Setting up msys2 for Windows
    - name: Installing dependencies for gmp build
      if: matrix.os == 'windows-latest'
      run: |
        msys2do pacman --noconfirm -S autoconf libtool make automake gcc
    - run: |
        cat <<EOT >> run.sh
        mv secp256k1 64bit
        cd 64bit
        ./autogen.sh 
        echo "LDFLAGS = -no-undefined" >> Makefile.am
        ./configure --host=x86_64-w64-mingw32 --enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared --with-bignum=no
        make
        strip .libs/libsecp256k1-0.dll
        mv .libs/libsecp256k1-0.dll .libs/secp256k1.dll
        EOT
      if: matrix.os == 'windows-latest'
      name: Creating script for secp256k1 build
      shell: bash
    - run: msys2do ./run.sh
      if: matrix.os == 'windows-latest'
      name: Running secp256k1 build for Windows x64
    - uses: actions/upload-artifact@v1
      name: Uploading Windows artifact
      if: matrix.os == 'windows-latest'
      with:
        name: windows_artifact_secp256k1
        path: 64bit/.libs/secp256k1.dll
