name: Secp256k1 Build

on:
  push:
    branches:
    - master

jobs:
  secp256k1-building:
    name: Building Secp256k1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
    - name: Cloning secp256k1 repository
      run: |
        git clone https://github.com/bitcoin-core/secp256k1.git
    - name: Building secp256k1 for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install autoconf libtool
        cd secp256k1/
        autoreconf -if --warnings=all
        ./autogen.sh
        ./configure -enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared
        make
    - name: Building secp256k1 for OSX
      if: matrix.os == 'macOS-latest'
      run: |
        brew install automake
        brew install libtool
        brew install gmp
        cd secp256k1/
        autoreconf -if --warnings=all
        ./autogen.sh
        ./configure -enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared
        make
    - uses: numworks/setup-msys2@v1
      if: matrix.os == 'windows-latest'
      name: Setting up msys2 for Windows
    - name: Installing dependencies for secp256k1 build
      if: matrix.os == 'windows-latest'
      run: |
        msys2do pacman --noconfirm -S autoconf libtool make automake gcc mingw-w64-x86_64-gcc
    - run: |
        cat <<EOT >> run.sh
        mv secp256k1 64bit
        cd 64bit
        ./autogen.sh 
        echo "LDFLAGS = -no-undefined" >> Makefile.am
        ./configure --host=x86_64-w64-mingw32 --enable-module-recovery --enable-experimental --enable-module-ecdh --enable-shared
        make
        mv .libs/libsecp256k1-0.dll ../secp256k1.dll
        EOT
      if: matrix.os == 'windows-latest'
      name: Creating script for secp256k1 build
      shell: bash
    - run: msys2do ./run.sh
      if: matrix.os == 'windows-latest'
      name: Running secp256k1 build for Windows x64