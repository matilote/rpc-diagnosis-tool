name: Publish Arm64 Image to Docker Registry

on:
  push:
    branches:
    - master

jobs:
  rocksdb-building:
    name: Building rocksdb (alpine linux)
    runs-on: ubuntu-latest
    steps:
    - name: Cloning required repositories
      run: |
        git clone git://github.com/alpinelinux/alpine-chroot-install.git
    - name: Installing Alpine Linux chroot
      run: |
        sudo apt-get update -y
        sudo apt-get install -y qemu-user-static
        sudo apt-get install -y binfmt-support
        cd alpine-chroot-install/
        sudo ./alpine-chroot-install -a aarch64 -d /alpine -r http://nl.alpinelinux.org/alpine/edge/testing/ -r http://dl-cdn.alpinelinux.org/alpine/edge/community/ -p build-base -p linux-headers -p cmake -p bash -p git -p zlib -p zlib-dev -p bzip2 -p bzip2-dev -p snappy -p snappy-dev -p lz4 -p lz4-dev -p zstd -p zstd-dev
    - name: Installing gflagsd
      run: |
        /alpine/enter-chroot -u root "$(git clone https://github.com/gflags/gflags.git && \
        cd gflags && \
        mkdir build && \
        cd build && \
        sudo cmake -DBUILD_SHARED_LIBS=1 -DGFLAGS_INSTALL_SHARED_LIBS=1 .. && \
        sudo make install)"
      continue-on-error: true
    - name: Building RocksDB for Alpine Linux
      run: |
        /alpine/enter-chroot uname -a
        /alpine/enter-chroot -u root "$(git clone https://github.com/facebook/rocksdb.git && \
        cd rocksdb && \
        git fetch --tags && latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) && \
        git checkout $latestTag && \
        TAG="${latestTag:1}" && \
        make shared_lib && \
        strip librocksdb.so.${TAG} && \ 
        mv librocksdb.so.${TAG} librocksdb.so)"
      continue-on-error: true
    - uses: actions/upload-artifact@v1
      name: Uploading Alpine Linux artifact
      with:
        name: alpine_linux_artifact_rocksdb
        path: rocksdb/librocksdb.so